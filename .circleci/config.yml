version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge

    working_directory: ~/rpsec-test-cir

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: database setup
          command: docker-compose run web rails db:create db:migrate
      - run:
          name: run tests
          command: docker-compose run web bundle exec bin/rspec
      - run:
          name: docker-compose down
          command: docker-compose down
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: "build docker image"
          command: docker build --rm=false -t registry.heroku.com/${HEROKU_APP_NAME}/web .
      - run:
          name: setup heroku command
          # CircleCIからHerokuへデプロイするためのスクリプトを実行
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          # メンテナンスモードに切り替え
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          # HEROKU_AUTH_TOKEN is generated by `heroku auth:token`
          name: "push container to registry.heroku.com"
          # Herokuへログインし，作成したイメージをPush,Release
          command: |
            docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
      - run:
          name: heroku maintenance off
          # メンテナンスモードを終了
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
